#!/usr/bin/env python

import os

# Import the Maximum Entropy reweighting class
from HDXer.reweighting import MaxEnt

### Inputs ###

# A list of folders that contain the 'Contacts_' and 'Hbonds_' files from calc_hdx
folders = [ os.path.expandvars("/home/klmcguire/MAX/Paper1/HDXER/Combined/calc_hdx_pD8_Temp298_default_betas_dt_str") ]
# The path to the target experimental data file
expt = os.path.expandvars("/home/klmcguire/MAX/Paper1/HDXER/Closed/expt_data/TOM_expt_dfracs.dat")
# The path to the file containing intrinsic rates for each residue in your protein, generated by calc_hdx
rates = os.path.expandvars("/home/klmcguire/MAX/Paper1/HDXER/Combined/calc_hdx_pD8_Temp298_default_betas_dt_str/Combined_Intrinsic_rates.dat")
# A list of timepoints in the experimental data (in minutes)
times = [ 0.25, 0.5, 1.0, 2.0 ]


### Running reweighting ###

# These lines will run reweighting for a gamma value of 1 x 10^-3
# Adapt them as necessary
exponent = -3
basegamma = 10**exponent

reweight_object = MaxEnt(do_reweight=True, do_params=False, stepfactor=0.000005)
reweight_object.run(gamma=basegamma, data_folders=folders, kint_file=rates, exp_file=expt, times=times, restart_interval=100, out_prefix=f'reweighting_gamma_1x10^{exponent}_')
print(f'Reweighting for gamma = 1x10^{exponent} completed')

# Help text describing options and how to call the reweighting functions
# is available in the docstrings of the MaxEnt class, e.g.:
#help(MaxEnt)
#help(MaxEnt.run)


# This loop will run reweighting for gamma values of 2 x 10^-3 to 9 x 10^-3
# Adapt it as necessary
for multiplier in range(2, 10):
    reweight_object = MaxEnt(do_reweight=True, do_params=False, stepfactor=0.000005)
    reweight_object.run(gamma=(multiplier * basegamma), data_folders=folders, kint_file=rates, exp_file=expt, times=times, restart_interval=100, out_prefix=f'reweighting_gamma_{multiplier}x10^{exponent}_')
    print(f'Reweighting for gamma = {multiplier}x10^{exponent} completed')